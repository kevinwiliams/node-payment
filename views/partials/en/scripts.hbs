<script>
    // Global GLightbox instance
    var lightbox = GLightbox({
        selector: '.glightbox', // The class used for the lightbox links
        touchNavigation: true,
        //loop: true,
        zoomable: true,
    });
// Function to create radio button and associated elements
function createRadioButton(index, service) {
    // Get login button to show on radio selection
    var submitButton = document.querySelector('button[name="nextBtn"]'); 

    // Create radio button
    var radioButton = document.createElement('input');
    radioButton.type = 'radio';
    radioButton.name = 'service';
    radioButton.required = true;
    radioButton.dataset.text = service.name;
    radioButton.dataset.desc = service.description;
    radioButton.id = 'service' + index;
    radioButton.value = service.serviceId;
    radioButton.classList.add('form-check-input');

    // Create label for the radio button
    var label = document.createElement('label');
    label.setAttribute('for', 'service' + index);
    label.textContent = service.name;

    // Create div to contain the radio button and associated elements
    var div = document.createElement('div');
    div.classList.add('form-check', 'pb-3');

    div.appendChild(radioButton);
    div.appendChild(label);

    // Add event listener to radio button to toggle visibility of price and textarea
    radioButton.addEventListener('change', function() {
        var allRadioButtons = document.querySelectorAll('input[name="service"]');
        allRadioButtons.forEach(function(radio) {
            var parentDiv = radio.parentNode;
            var quantityList = parentDiv.querySelector('select[name="quantity"]');
            var quantityLbl = parentDiv.querySelector('label[for="quantity"]');
            var priceSign = parentDiv.querySelector('span[id="sign"]');
            var priceInput = parentDiv.querySelector('input[name="price"]');
            var currencyList = parentDiv.querySelector('select[name="currency"]');
            var notesText = parentDiv.querySelector('textarea[name="otherInfo"]');
            if (radio.checked) {
                console.log(radio.dataset.text);

                //remove disable from submit button
                submitButton.disabled = false;
                //capture service text and description for checkout page
                $('#serviceText').val(radio.dataset.text);
                $('#description').val(radio.dataset.desc);
                
                // Show price input and textarea for the selected radio button
                if (quantityList) quantityList.style.display = 'block';
                if (quantityLbl) quantityLbl.style.display = 'block';
                if (currencyList) currencyList.style.display = 'block';
                if (currencyList) currencyList.required = true;
                if (priceSign) priceSign.style.display = 'block';
                if (priceInput) priceInput.style.display = 'block';
                if (priceInput) priceInput.required = true;
                if (notesText) notesText.style.display = 'block';
                
                // Format price field to avoid user error
                if (!quantityList){
                    document.querySelectorAll('#price').forEach(function(el) {
                        new Cleave(el, {numeral: true, numeralPositiveOnly: true});
                    });
                }
            } 
            else {
                // Hide price input and textarea for other radio buttons
                if (quantityList) quantityList.style.display = 'none';
                if (quantityLbl) quantityLbl.style.display = 'none';
                if (currencyList) currencyList.style.display = 'none';
                if (currencyList) currencyList.required = false;
                if (priceSign) priceSign.style.display = 'none';
                if (priceInput) priceInput.style.display = 'none';
                if (priceInput) priceInput.required = false;
                if (notesText) notesText.style.display = 'none';
            }
        });
    });

    // If price is 0, create an input box to collect the price
    if (service.price !== null && service.price !== 0) {
        var priceSpan = document.createElement('span');
        priceSpan.classList.add('px-3');
        priceSpan.textContent = service.currency + ' $' + parseFloat(service.price).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ","); // Display price and currency
        div.appendChild(priceSpan); // Append the price information to the div

        // Create hidden input fields for additional data
        var priceHidden = document.createElement('input');
        priceHidden.type = 'hidden';
        priceHidden.name = 'price';
        priceHidden.value = service.price;
        div.appendChild(priceHidden);

        // Create hidden input fields for additional data
        var currenyHidden = document.createElement('input');
        currenyHidden.type = 'hidden';
        currenyHidden.name = 'currency';
        currenyHidden.value = service.currency;
        div.appendChild(currenyHidden);

        // Create input fields for additional data

        var quantityDiv = document.createElement('div');
        quantityDiv.classList.add('form-floating', 'justify-content-between', 'align-items-center',  'd-flex', 'gap-2');
        //quantityDiv.classList.add('col-lg-2', 'col-md-4', 'col-sm-2');
        div.appendChild(quantityDiv);


        var quantityDropdown = document.createElement('select');
        quantityDropdown.name = 'quantity';
        quantityDropdown.id = 'quantity';
        quantityDropdown.classList.add('form-select');
        quantityDropdown.style.display = 'none'; // Hide dropdown initially
        [1, 2, 3, 4, 5].forEach(function (qty) {
            var option = new Option(qty, qty);
            quantityDropdown.appendChild(option);
        });
        quantityDiv.appendChild(quantityDropdown);
       /* var quantityInput = document.createElement('input');
        quantityInput.type = 'number';
        quantityInput.name = 'quantity';
        quantityInput.id = 'quantity';
        quantityInput.classList.add('form-control');
        quantityInput.value = 1;
        quantityDiv.appendChild(quantityInput);*/

        var quantityLbl = document.createElement('label');
        quantityLbl.setAttribute('for', 'quantity');
        quantityLbl.innerHTML= 'Quantity';
        quantityLbl.style.display = 'none';
        quantityDiv.appendChild(quantityLbl);

        // Image handling (optional, with lightbox)
        if (service.image) {
            var imageContainer = document.createElement('div');
            imageContainer.classList.add('image-container', 'position-relative');
            
            var imgWrapper = document.createElement('a');
            imgWrapper.href = service.image;
            imgWrapper.dataset.title = service.name;
            imgWrapper.classList.add('glightbox');

            var img = document.createElement('img');
            img.src = service.image;
            img.alt = service.name + ' image';
            img.classList.add('service-image', 'rounded', 'image-fluid');
            img.style.maxWidth = '100px'; // Adjust width as needed
            img.style.height = 'auto';   // Maintain aspect ratio

            var magnifyIcon = document.createElement('i');
            magnifyIcon.classList.add('bi', 'bi-search', 'magnifier-icon');

            imgWrapper.appendChild(img);
            imageContainer.appendChild(imgWrapper);
            imageContainer.appendChild(magnifyIcon);
            quantityDiv.appendChild(imageContainer);
        }
    
    } 
    else {

        var priceInputGroup = document.createElement('div');
        priceInputGroup.classList.add('input-group', 'd-flex', 'mb-2');


        var currencyDropdown = document.createElement('select');
        currencyDropdown.name = 'currency';
        currencyDropdown.id = 'currency';
        currencyDropdown.classList.add('form-control', 'me-1', 'w-10');
        currencyDropdown.style.display = 'none'; // Hide dropdown initially
       ['Choose Currency', 'JMD', 'USD'].forEach(function (cur, idx) {
            var option = new Option(cur, idx === 0 ? '' : cur);
            if (idx === 0) option.selected = true;
            currencyDropdown.appendChild(option);
        });
        // priceInputGroup.appendChild(currencyDropdown);

        // Create a new input group for the price input
        var priceWrapper = document.createElement('div');
        priceWrapper.classList.add('input-group');

        // Add the dollar sign span
        var dollarSign = document.createElement('span');
        dollarSign.id = 'sign';
        dollarSign.name = 'sign';
        dollarSign.classList.add('input-group-text');
        dollarSign.textContent = '$';
        dollarSign.style.display = 'none'; // Hide price input initially

        priceWrapper.appendChild(currencyDropdown);
        priceWrapper.appendChild(dollarSign);


        var priceInput = document.createElement('input');
        priceInput.type = 'text';
        priceInput.id = 'price';
        priceInput.name = 'price';
        priceInput.placeholder = '00.00';
        priceInput.classList.add('form-control', 'flex-grow-1');
        priceInput.style.display = 'none'; // Hide price input initially
        priceInputGroup.appendChild(priceInput);

        priceWrapper.appendChild(priceInput);
        // Add the priceWrapper to the main input group
        priceInputGroup.appendChild(priceWrapper);

        div.appendChild(priceInputGroup);

        var infodiv = document.createElement('div');
        infodiv.classList.add('justify-content-between', 'align-items-center', 'd-flex', 'gap-2');

        var notesText = document.createElement('textarea');
        notesText.name = 'otherInfo';
        notesText.id = 'otherInfo';
        notesText.rows = '3';
        notesText.placeholder = 'Enter additional notes re your payment';
        notesText.classList.add('form-control');
        notesText.style.display = 'none'; // Hide textarea initially
        infodiv.appendChild(notesText);

        if (service.image) {
            
            var imageContainer = document.createElement('div');
            imageContainer.classList.add('image-container', 'position-relative');

            var imgWrapper = document.createElement('a');
            imgWrapper.href = service.image;
            imgWrapper.dataset.title = service.name;
            imgWrapper.classList.add('glightbox');

            var img = document.createElement('img');
            img.src = service.image;
            img.alt = service.name + ' image';
            img.classList.add('service-image', 'rounded', 'image-fluid');
            img.style.maxWidth = '100px'; // Adjust width as needed
            img.style.height = 'auto';   // Maintain aspect ratio
            imgWrapper.appendChild(img);

            var magnifyIcon = document.createElement('i');
            magnifyIcon.classList.add('bi', 'bi-search', 'magnifier-icon');

            imageContainer.appendChild(imgWrapper);
            imageContainer.appendChild(magnifyIcon);

            infodiv.appendChild(imageContainer);
        }

        div.appendChild(infodiv);
    }

    // var addBreak = document.createElement('br');
    // div.appendChild(addBreak);

    var descriptionInput = document.createElement('span');
    descriptionInput.name = 'description';
    descriptionInput.innerHTML = service.description; 
    descriptionInput.classList.add('row', 'px-2',  'd-flex', 'small', 'text-secondary'); 
    div.appendChild(descriptionInput);

    return div;
}
// Function to append radio buttons to the serviceOptions div
function appendRadioButtons(services) {
    var serviceOptions = document.getElementById('serviceOptions');
    serviceOptions.innerHTML = ''; // Clear previous content

    services.forEach(function(service, index) {
        var radioButtonDiv = createRadioButton(index, service);
        serviceOptions.appendChild(radioButtonDiv);
    });
}

$(document).ready(function() {

    $(window).on('pageshow', function (event) {
        // Check if the event's persisted property is false
        if (event.originalEvent.persisted) {
            // This means the page is loaded from the cache
            $('#category').val('').trigger('change');
        }
    });

    $('#category').val('').trigger('change');
    $('#category').on('change', function() {
        var categoryId = $(this).val();
        var categoryName = $(this).find('option:selected').text();
        //console.log('categoryId', categoryId);
        //console.log('categoryName', categoryName);
        $('#categoryName').val(categoryName);

        if(!categoryId){
            $('#categoryList').hide();
            $('#nextBtn').prop('disabled', true);;
        }

        $.ajax({
            url: '/en/service',
            method: 'POST',
            data: { id: categoryId },
            success: function(response) {
                // Clear existing service options
                $('#serviceOptions').empty();
                // Append radio buttons for each service
                appendRadioButtons(response.services);

               if(response.services.length == 0){ $('#serviceOptions').html('<b>Options not available at this time. Please try another category.</b>'); }

                // Show the services
                $('#categoryList').show();
                lightbox.reload();
                //lightbox = GLightbox({ selector: '.glightbox' });
            },
            error: function(err) {
                console.error(err);
                alert('Error loading services');
            }
        });
    });
    $('#step1Form').on('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission
        
        // Find the selected radio button
        var selectedService = $('input[name="service"]:checked');
                
        // If no service is selected, display an error message and stop the submission
        if (!selectedService.length) {
            alert('Please select a service');
            return;
        }

        
                
        // Retrieve the selected service details
        var serviceName = selectedService.data('text');
        var serviceDesc = selectedService.data('desc');
        
        // Assign the selected service details to hidden fields
        $('#serviceText').val(serviceName);
        $('#description').val(serviceDesc);

        // Retrieve the hidden field values
        var currency = selectedService.closest('div').find('select[name="currency"]').val();
        var currencyHidden = selectedService.closest('div').find('input[name="currency"]').val();
        var price = selectedService.closest('div').find('input[name="price"]').val();
        var quantity = selectedService.closest('div').find('select[name="quantity"]').val();
        var otherInfo = selectedService.closest('div').find('textarea[name="otherInfo"]').val();

        var curr = (typeof currency !== 'undefined') ? currency : currencyHidden;

        /*if (!/^\d*\.?\d*$/.test(price)) {
            alert('Please enter numbers and "." only. Example: 50000.00');
            // Remove any non-numeric characters
            var fixedPrice = price.replace(/[^\d.]/g, '');
            selectedService.closest('div').find('input[name="price"]').val(fixedPrice);
            return;
        }*/

        // Assign the hidden field values to hidden input fields in the form
        $('#count').val(quantity);
        $('#currencyhd').val(curr);
        $('#currency').val(currency);
        $('#totalAmount').val(price);
        $('#otherInfohd').val(otherInfo);
        //$('[name=price]').val(totalAmount);

        console.log('currency', currency);
        console.log('currencyHidden', currencyHidden);
        console.log('curr', curr);
        console.log('price', price);
        console.log('quantity', quantity);
        console.log('otherInfo', otherInfo);

        // Submit the form
        this.submit();
    });
    
});


</script>